/*! FiveThirtyEight - v0.1.0
 * 
 * Licensed GPLv2+ */
/*jshint multistr:true browser:true */
/*!
 * FitVids 1.0.3
 *
 * Copyright 2013, Chris Coyier - http://css-tricks.com + Dave Rupert - http://daverupert.com
 * Credit to Thierry Koblentz - http://www.alistapart.com/articles/creating-intrinsic-ratios-for-video/
 * Released under the WTFPL license - http://sam.zoy.org/wtfpl/
 *
 * Date: Thu Sept 01 18:00:00 2011 -0500
 */

(function ($) {

  "use strict";

  $.fn.fitVids = function (options) {
    var settings = {
      customSelector: null
    };

    if (!document.getElementById('fit-vids-style')) {

      var div = document.createElement('div'),
          ref = document.getElementsByTagName('base')[0] || document.getElementsByTagName('script')[0],
          cssStyles = '&shy;<style>.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}</style>';

      div.className = 'fit-vids-style';
      div.id = 'fit-vids-style';
      div.style.display = 'none';
      div.innerHTML = cssStyles;

      ref.parentNode.insertBefore(div, ref);

    }

    if (options) {
      $.extend(settings, options);
    }

    return this.each(function () {
      var selectors = [
        "iframe[src*='player.vimeo.com']",
        "iframe[src*='youtube.com']",
        "iframe[src*='youtube-nocookie.com']",
        "iframe[src*='kickstarter.com'][src*='video.html']",
        "object",
        "embed"
      ];

      if (settings.customSelector) {
        selectors.push(settings.customSelector);
      }

      var $allVideos = $(this).find(selectors.join(','));
      $allVideos = $allVideos.not("object object"); // SwfObj conflict patch

      $allVideos.each(function () {
        var $this = $(this);
        if (this.tagName.toLowerCase() === 'embed' && $this.parent('object').length || $this.parent('.fluid-width-video-wrapper').length) {
          return;
        }
        var height = ( this.tagName.toLowerCase() === 'object' || ($this.attr('height') && !isNaN(parseInt($this.attr('height'), 10))) ) ? parseInt($this.attr('height'), 10) : $this.height(),
            width = !isNaN(parseInt($this.attr('width'), 10)) ? parseInt($this.attr('width'), 10) : $this.width(),
            aspectRatio = height / width;
        if (!$this.attr('id')) {
          var videoID = 'fitvid' + Math.floor(Math.random() * 999999);
          $this.attr('id', videoID);
        }
        $this.wrap('<div class="fluid-width-video-wrapper"></div>').parent('.fluid-width-video-wrapper').css('padding-top', (aspectRatio * 100) + "%");
        $this.removeAttr('height').removeAttr('width');
      });
    });
  };
// Works with either jQuery or Zepto
})(window.jQuery || window.Zepto);

// Generated by CoffeeScript 1.6.2
/*
jQuery Waypoints - v2.0.4
Copyright (c) 2011-2014 Caleb Troughton
Dual licensed under the MIT license and GPL license.
https://github.com/imakewebthings/jquery-waypoints/blob/master/licenses.txt
*/


(function() {
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },
    __slice = [].slice;

  (function(root, factory) {
    if (typeof define === 'function' && define.amd) {
      return define('waypoints', ['jquery'], function($) {
        return factory($, root);
      });
    } else {
      return factory(root.jQuery, root);
    }
  })(this, function($, window) {
    var $w, Context, Waypoint, allWaypoints, contextCounter, contextKey, contexts, isTouch, jQMethods, methods, resizeEvent, scrollEvent, waypointCounter, waypointKey, wp, wps;

    $w = $(window);
    isTouch = __indexOf.call(window, 'ontouchstart') >= 0;
    allWaypoints = {
      horizontal: {},
      vertical: {}
    };
    contextCounter = 1;
    contexts = {};
    contextKey = 'waypoints-context-id';
    resizeEvent = 'resize.waypoints';
    scrollEvent = 'scroll.waypoints';
    waypointCounter = 1;
    waypointKey = 'waypoints-waypoint-ids';
    wp = 'waypoint';
    wps = 'waypoints';
    Context = (function() {
      function Context($element) {
        var _this = this;

        this.$element = $element;
        this.element = $element[0];
        this.didResize = false;
        this.didScroll = false;
        this.id = 'context' + contextCounter++;
        this.oldScroll = {
          x: $element.scrollLeft(),
          y: $element.scrollTop()
        };
        this.waypoints = {
          horizontal: {},
          vertical: {}
        };
        this.element[contextKey] = this.id;
        contexts[this.id] = this;
        $element.bind(scrollEvent, function() {
          var scrollHandler;

          if (!(_this.didScroll || isTouch)) {
            _this.didScroll = true;
            scrollHandler = function() {
              _this.doScroll();
              return _this.didScroll = false;
            };
            return window.setTimeout(scrollHandler, $[wps].settings.scrollThrottle);
          }
        });
        $element.bind(resizeEvent, function() {
          var resizeHandler;

          if (!_this.didResize) {
            _this.didResize = true;
            resizeHandler = function() {
              $[wps]('refresh');
              return _this.didResize = false;
            };
            return window.setTimeout(resizeHandler, $[wps].settings.resizeThrottle);
          }
        });
      }

      Context.prototype.doScroll = function() {
        var axes,
          _this = this;

        axes = {
          horizontal: {
            newScroll: this.$element.scrollLeft(),
            oldScroll: this.oldScroll.x,
            forward: 'right',
            backward: 'left'
          },
          vertical: {
            newScroll: this.$element.scrollTop(),
            oldScroll: this.oldScroll.y,
            forward: 'down',
            backward: 'up'
          }
        };
        if (isTouch && (!axes.vertical.oldScroll || !axes.vertical.newScroll)) {
          $[wps]('refresh');
        }
        $.each(axes, function(aKey, axis) {
          var direction, isForward, triggered;

          triggered = [];
          isForward = axis.newScroll > axis.oldScroll;
          direction = isForward ? axis.forward : axis.backward;
          $.each(_this.waypoints[aKey], function(wKey, waypoint) {
            var _ref, _ref1;

            if ((axis.oldScroll < (_ref = waypoint.offset) && _ref <= axis.newScroll)) {
              return triggered.push(waypoint);
            } else if ((axis.newScroll < (_ref1 = waypoint.offset) && _ref1 <= axis.oldScroll)) {
              return triggered.push(waypoint);
            }
          });
          triggered.sort(function(a, b) {
            return a.offset - b.offset;
          });
          if (!isForward) {
            triggered.reverse();
          }
          return $.each(triggered, function(i, waypoint) {
            if (waypoint.options.continuous || i === triggered.length - 1) {
              return waypoint.trigger([direction]);
            }
          });
        });
        return this.oldScroll = {
          x: axes.horizontal.newScroll,
          y: axes.vertical.newScroll
        };
      };

      Context.prototype.refresh = function() {
        var axes, cOffset, isWin,
          _this = this;

        isWin = $.isWindow(this.element);
        cOffset = this.$element.offset();
        this.doScroll();
        axes = {
          horizontal: {
            contextOffset: isWin ? 0 : cOffset.left,
            contextScroll: isWin ? 0 : this.oldScroll.x,
            contextDimension: this.$element.width(),
            oldScroll: this.oldScroll.x,
            forward: 'right',
            backward: 'left',
            offsetProp: 'left'
          },
          vertical: {
            contextOffset: isWin ? 0 : cOffset.top,
            contextScroll: isWin ? 0 : this.oldScroll.y,
            contextDimension: isWin ? $[wps]('viewportHeight') : this.$element.height(),
            oldScroll: this.oldScroll.y,
            forward: 'down',
            backward: 'up',
            offsetProp: 'top'
          }
        };
        return $.each(axes, function(aKey, axis) {
          return $.each(_this.waypoints[aKey], function(i, waypoint) {
            var adjustment, elementOffset, oldOffset, _ref, _ref1;

            adjustment = waypoint.options.offset;
            oldOffset = waypoint.offset;
            elementOffset = $.isWindow(waypoint.element) ? 0 : waypoint.$element.offset()[axis.offsetProp];
            if ($.isFunction(adjustment)) {
              adjustment = adjustment.apply(waypoint.element);
            } else if (typeof adjustment === 'string') {
              adjustment = parseFloat(adjustment);
              if (waypoint.options.offset.indexOf('%') > -1) {
                adjustment = Math.ceil(axis.contextDimension * adjustment / 100);
              }
            }
            waypoint.offset = elementOffset - axis.contextOffset + axis.contextScroll - adjustment;
            if ((waypoint.options.onlyOnScroll && (oldOffset != null)) || !waypoint.enabled) {
              return;
            }
            if (oldOffset !== null && (oldOffset < (_ref = axis.oldScroll) && _ref <= waypoint.offset)) {
              return waypoint.trigger([axis.backward]);
            } else if (oldOffset !== null && (oldOffset > (_ref1 = axis.oldScroll) && _ref1 >= waypoint.offset)) {
              return waypoint.trigger([axis.forward]);
            } else if (oldOffset === null && axis.oldScroll >= waypoint.offset) {
              return waypoint.trigger([axis.forward]);
            }
          });
        });
      };

      Context.prototype.checkEmpty = function() {
        if ($.isEmptyObject(this.waypoints.horizontal) && $.isEmptyObject(this.waypoints.vertical)) {
          this.$element.unbind([resizeEvent, scrollEvent].join(' '));
          return delete contexts[this.id];
        }
      };

      return Context;

    })();
    Waypoint = (function() {
      function Waypoint($element, context, options) {
        var idList, _ref;

        options = $.extend({}, $.fn[wp].defaults, options);
        if (options.offset === 'bottom-in-view') {
          options.offset = function() {
            var contextHeight;

            contextHeight = $[wps]('viewportHeight');
            if (!$.isWindow(context.element)) {
              contextHeight = context.$element.height();
            }
            return contextHeight - $(this).outerHeight();
          };
        }
        this.$element = $element;
        this.element = $element[0];
        this.axis = options.horizontal ? 'horizontal' : 'vertical';
        this.callback = options.handler;
        this.context = context;
        this.enabled = options.enabled;
        this.id = 'waypoints' + waypointCounter++;
        this.offset = null;
        this.options = options;
        context.waypoints[this.axis][this.id] = this;
        allWaypoints[this.axis][this.id] = this;
        idList = (_ref = this.element[waypointKey]) != null ? _ref : [];
        idList.push(this.id);
        this.element[waypointKey] = idList;
      }

      Waypoint.prototype.trigger = function(args) {
        if (!this.enabled) {
          return;
        }
        if (this.callback != null) {
          this.callback.apply(this.element, args);
        }
        if (this.options.triggerOnce) {
          return this.destroy();
        }
      };

      Waypoint.prototype.disable = function() {
        return this.enabled = false;
      };

      Waypoint.prototype.enable = function() {
        this.context.refresh();
        return this.enabled = true;
      };

      Waypoint.prototype.destroy = function() {
        delete allWaypoints[this.axis][this.id];
        delete this.context.waypoints[this.axis][this.id];
        return this.context.checkEmpty();
      };

      Waypoint.getWaypointsByElement = function(element) {
        var all, ids;

        ids = element[waypointKey];
        if (!ids) {
          return [];
        }
        all = $.extend({}, allWaypoints.horizontal, allWaypoints.vertical);
        return $.map(ids, function(id) {
          return all[id];
        });
      };

      return Waypoint;

    })();
    methods = {
      init: function(f, options) {
        var _ref;

        if (options == null) {
          options = {};
        }
        if ((_ref = options.handler) == null) {
          options.handler = f;
        }
        this.each(function() {
          var $this, context, contextElement, _ref1;

          $this = $(this);
          contextElement = (_ref1 = options.context) != null ? _ref1 : $.fn[wp].defaults.context;
          if (!$.isWindow(contextElement)) {
            contextElement = $this.closest(contextElement);
          }
          contextElement = $(contextElement);
          context = contexts[contextElement[0][contextKey]];
          if (!context) {
            context = new Context(contextElement);
          }
          return new Waypoint($this, context, options);
        });
        $[wps]('refresh');
        return this;
      },
      disable: function() {
        return methods._invoke.call(this, 'disable');
      },
      enable: function() {
        return methods._invoke.call(this, 'enable');
      },
      destroy: function() {
        return methods._invoke.call(this, 'destroy');
      },
      prev: function(axis, selector) {
        return methods._traverse.call(this, axis, selector, function(stack, index, waypoints) {
          if (index > 0) {
            return stack.push(waypoints[index - 1]);
          }
        });
      },
      next: function(axis, selector) {
        return methods._traverse.call(this, axis, selector, function(stack, index, waypoints) {
          if (index < waypoints.length - 1) {
            return stack.push(waypoints[index + 1]);
          }
        });
      },
      _traverse: function(axis, selector, push) {
        var stack, waypoints;

        if (axis == null) {
          axis = 'vertical';
        }
        if (selector == null) {
          selector = window;
        }
        waypoints = jQMethods.aggregate(selector);
        stack = [];
        this.each(function() {
          var index;

          index = $.inArray(this, waypoints[axis]);
          return push(stack, index, waypoints[axis]);
        });
        return this.pushStack(stack);
      },
      _invoke: function(method) {
        this.each(function() {
          var waypoints;

          waypoints = Waypoint.getWaypointsByElement(this);
          return $.each(waypoints, function(i, waypoint) {
            waypoint[method]();
            return true;
          });
        });
        return this;
      }
    };
    $.fn[wp] = function() {
      var args, method;

      method = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      if (methods[method]) {
        return methods[method].apply(this, args);
      } else if ($.isFunction(method)) {
        return methods.init.apply(this, arguments);
      } else if ($.isPlainObject(method)) {
        return methods.init.apply(this, [null, method]);
      } else if (!method) {
        return $.error("jQuery Waypoints needs a callback function or handler option.");
      } else {
        return $.error("The " + method + " method does not exist in jQuery Waypoints.");
      }
    };
    $.fn[wp].defaults = {
      context: window,
      continuous: true,
      enabled: true,
      horizontal: false,
      offset: 0,
      triggerOnce: false
    };
    jQMethods = {
      refresh: function() {
        return $.each(contexts, function(i, context) {
          return context.refresh();
        });
      },
      viewportHeight: function() {
        var _ref;

        return (_ref = window.innerHeight) != null ? _ref : $w.height();
      },
      aggregate: function(contextSelector) {
        var collection, waypoints, _ref;

        collection = allWaypoints;
        if (contextSelector) {
          collection = (_ref = contexts[$(contextSelector)[0][contextKey]]) != null ? _ref.waypoints : void 0;
        }
        if (!collection) {
          return [];
        }
        waypoints = {
          horizontal: [],
          vertical: []
        };
        $.each(waypoints, function(axis, arr) {
          $.each(collection[axis], function(key, waypoint) {
            return arr.push(waypoint);
          });
          arr.sort(function(a, b) {
            return a.offset - b.offset;
          });
          waypoints[axis] = $.map(arr, function(waypoint) {
            return waypoint.element;
          });
          return waypoints[axis] = $.unique(waypoints[axis]);
        });
        return waypoints;
      },
      above: function(contextSelector) {
        if (contextSelector == null) {
          contextSelector = window;
        }
        return jQMethods._filter(contextSelector, 'vertical', function(context, waypoint) {
          return waypoint.offset <= context.oldScroll.y;
        });
      },
      below: function(contextSelector) {
        if (contextSelector == null) {
          contextSelector = window;
        }
        return jQMethods._filter(contextSelector, 'vertical', function(context, waypoint) {
          return waypoint.offset > context.oldScroll.y;
        });
      },
      left: function(contextSelector) {
        if (contextSelector == null) {
          contextSelector = window;
        }
        return jQMethods._filter(contextSelector, 'horizontal', function(context, waypoint) {
          return waypoint.offset <= context.oldScroll.x;
        });
      },
      right: function(contextSelector) {
        if (contextSelector == null) {
          contextSelector = window;
        }
        return jQMethods._filter(contextSelector, 'horizontal', function(context, waypoint) {
          return waypoint.offset > context.oldScroll.x;
        });
      },
      enable: function() {
        return jQMethods._invoke('enable');
      },
      disable: function() {
        return jQMethods._invoke('disable');
      },
      destroy: function() {
        return jQMethods._invoke('destroy');
      },
      extendFn: function(methodName, f) {
        return methods[methodName] = f;
      },
      _invoke: function(method) {
        var waypoints;

        waypoints = $.extend({}, allWaypoints.vertical, allWaypoints.horizontal);
        return $.each(waypoints, function(key, waypoint) {
          waypoint[method]();
          return true;
        });
      },
      _filter: function(selector, axis, test) {
        var context, waypoints;

        context = contexts[$(selector)[0][contextKey]];
        if (!context) {
          return [];
        }
        waypoints = [];
        $.each(context.waypoints[axis], function(i, waypoint) {
          if (test(context, waypoint)) {
            return waypoints.push(waypoint);
          }
        });
        waypoints.sort(function(a, b) {
          return a.offset - b.offset;
        });
        return $.map(waypoints, function(waypoint) {
          return waypoint.element;
        });
      }
    };
    $[wps] = function() {
      var args, method;

      method = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      if (jQMethods[method]) {
        return jQMethods[method].apply(null, args);
      } else {
        return jQMethods.aggregate.call(null, method);
      }
    };
    $[wps].settings = {
      resizeThrottle: 100,
      scrollThrottle: 30
    };
    return $w.load(function() {
      return $[wps]('refresh');
    });
  });

}).call(this);

/*!
 * intention.js Library v0.9.7.2 ------- CUSTOM
 * http://intentionjs.com/
 *
 * Copyright 2011, 2013 Dowjones and other contributors
 * Released under the MIT license
 *
 */

(function(root, factory) {

  'use strict';

  if (typeof define === 'function' && define.amd) {
    define('intention', ['jquery', 'underscore'], factory);
  } else {
    root.Intention = factory(root.jQuery, root._);
  }
}(this, function($, _) {
  'use strict';

  var Intention = function(params){
    var intent = _.extend(this, params,
                          {_listeners:{}, contexts:[], elms:$(), axes:{}, priority:[]});

    return intent;
  };

  Intention.prototype = {

    // public methods
    responsive:function responsive(contexts, options){
      // for generating random ids for axis when not specified
      var idChars = 'abcdefghijklmnopqrstuvwxyz0123456789',
          id='', i;

      // create a random id for the axis
      for(i=0; i<5; i++){
        id += idChars[Math.floor(Math.random() * idChars.length)];
      }
      var defaults = {
        // if no matcher function is specified expect to compare a
        // string to the ctx.name property
        matcher: function(measure, ctx){
          return measure === ctx.name;
        },
        // function takes one arg and returns it
        measure: _.identity,
        ID: id
      };

      if(_.isObject(options) === false) {
        options = {};
      }

      if((_.isArray(contexts)) && (_.isArray(contexts[0].contexts))){
        _.each(contexts, function(axis){
          responsive.apply(this, axis);
        }, this);
        return;
      }

      if((_.isArray(contexts) === false) && _.isObject(contexts)){
        options = contexts;
      } else {
        options.contexts = contexts;
      }

      // fill in the options
      options = _.extend({}, defaults, options);

      // bind an the respond function to the axis ID and prefix it
      // with an underscore so that it does not get whomped accidentally
      this.on('_' + options.ID + ':', _.bind(
        function(e){
          this.axes = this._contextualize(
            options.ID, e.context, this.axes);
          this._respond(this.axes, this.elms);

        }, this));

      var axis = {
        ID:options.ID,
        current:null,
        contexts:options.contexts,
        respond:_.bind(this._responder(options.ID, options.contexts,
                                       options.matcher, options.measure), this)
      };

      this.axes[options.ID] = axis;

      this.axes.__keys__ = this.priority;

      this.priority.unshift(options.ID);

      return axis;
    },

    elements: function(scope){

      // find all responsive elms in a specific dom scope
      if(!scope){
        scope = document;
      }

      $($('[data-intent],[intent],[data-in],[in]', scope).get().reverse())
        .each(_.bind(function(i, elm){
          this.add($(elm));
        }, this));

      return this;
    },

    add: function(elms, options){

      var spec;

      if(!options) {
        options = {};
      }

      // is expecting a jquery object
      elms.each(_.bind(function(i, elm){
        var exists = false;
        this.elms.each(function(i, respElm){
          if(elm === respElm) {
            exists=true;
            return false;
          }
          return true;
        });

        if(exists === false){
          // create the elements responsive data
          spec = this._fillSpec(
            _.extend(options, this._attrsToSpec(elm.attributes, this.axes)));
          // make any appropriate changes based on the current contexts
          this._makeChanges($(elm), spec, this.axes);

          this.elms.push({
            elm: elm,
            spec: spec
          });
        }

      }, this));

      return this;
    },

    remove: function(elms){
      // is expecting a jquery object
      var respElms = this.elms;
      // elms to remove
      elms.each(function(i, elm){
        // elms to check against
        respElms.each(function(i, candidate){
          if(elm === candidate.elm){
            respElms.splice(i, 1);
            // found the match, break the loop
            return false;
          }
          return true;
        });
      });
      return this;
    },

    is: function(ctxName){
      var axes = this.axes;
      return _.some(axes.__keys__, function(key){
        return ctxName === axes[key].current;
      });
    },

    current: function(axisName){
      if(this.axes.hasOwnProperty(axisName)){
        return this.axes[axisName].current;
      } else {
        return false;
      }
    },

    // code and concept taken from simple implementation of
    // observer pattern outlined here:
    // http://www.nczonline.net/blog/2010/03/09/custom-events-in-javascript/
    on: function(type, listener){

      var events = type.split(' '),
          i=0;

      for(i;i<events.length;i++){
        if(this._listeners[events[i]] === undefined) {
          this._listeners[events[i]]=[];
        }
        this._listeners[events[i]].push(listener);
      }

      return this;
    },

    off: function(type, listener){
      if(_.isArray(this._listeners[type])){
        var listeners = this._listeners[type],
            i;
        for(i=0;listeners.length; i++){
          if(listeners[i] === listener){
            listeners.splice(i,1);
            break;
          }
        }
      }
      return this;
    },

    // privates
    _responder: function(axisID, contexts, matcher, measure){

      var currentContext;

      // called to perform a check
      return function(){

        var measurement = measure.apply(this, arguments);

        _.every(contexts, function(ctx){
          if( matcher(measurement, ctx)) {
            // first time, or different than last context
            if( (currentContext===undefined) ||
                (ctx.name !== currentContext.name)){

              currentContext = ctx;

              // event emitting!
              // emit the private axis event
              this._emitter(
                {_type: '_' + axisID + ':', context:currentContext.name},
                currentContext, this)

              // emit the public axis event
                ._emitter({_type: axisID + ':', context:currentContext.name},
                          currentContext, this)

              // attempt to trigger the axis to context pair
                ._emitter(_.extend({},
                                   {_type: axisID + ':' + currentContext.name},
                                   currentContext), currentContext, this)

              // then emit the context event (second ensures the context
              // changes happen after all dom manipulations)
                ._emitter(_.extend({}, {_type:currentContext.name},
                                   currentContext), currentContext, this);

              // done, break the loop
              return false;
            }
            // same context, break the loop
            return false;
          }
          return true;
        }, this);

        // return the intention object for chaining
        return this;
      };
    },

    _emitter: function(event){
      if(typeof event === 'string') {
        event={_type:event};
      }
      if(!event.target){
        event.target=this;
      }
      if(!event._type){
        throw new Error(event._type + ' is not a supported event.');
      }
      if(_.isArray(this._listeners[event._type])){
        var listeners = this._listeners[event._type],
            i;
        for(i=0; i<listeners.length; i++){
          listeners[i].apply(this, arguments);
        }
      }

      return this;
    },

    _fillSpec: function(spec){

      var applySpec = function(fn){
        _.each(spec, function(axisOptions, axis){
          _.each(axisOptions, function(ctxOptions, ctx){
            fn(ctxOptions, ctx, axis);
          });
        });
      }, filler={};

      applySpec(function(options){
        // check to see if the ctx val is an object, could be a string
        if(_.isObject(options)){
          _.each(options, function(val, func){
            filler[func] = '';
          });
        }
      });

      applySpec(function(options, ctx, axis){
        if(_.isObject(options)){
          spec[axis][ctx] = _.extend({}, filler, options);
        }
      });

      return spec;
    },

    _assocAxis: function(ctx, axes){

      var match=false;

      _.every(axes.__keys__, function(axis){

        if(match === false){
          _.every(axes[axis].contexts, function(ctxCandidate){
            if(ctxCandidate.name === ctx){
              match = axis;
              return false;
            }
            return true;
          });
          return true;
        }else {
          return false;
        }
      });

      return match;
    },

    _makeSpec: function(axis, ctx, sAttr, value, spec){
      var axisObj,
          ctxObj;

      if(spec[axis] !== undefined){
        axisObj = spec[axis];

        if(axisObj[ctx] === undefined) {
          axisObj[ctx] = {};
        }
      } else {
        axisObj = {};
        axisObj[ctx] = {};
        spec[axis] = axisObj;
      }
      axisObj[ctx][sAttr] = value;

      return spec;
    },

    _attrsToSpec: function(attrs, axes){

      var spec={},
          fullPattern = new RegExp(
            '^(data-)?(in|intent)-(([a-zA-Z0-9][a-zA-Z0-9]*:)?([a-zA-Z0-9]*))-([A-Za-z:-]+)'),
          axisPattern =  new RegExp(
            '^(data-)?(in|intent)-([a-zA-Z0-9][_a-zA-Z0-9]*):$');

      _.each(attrs, function(attr){

        var specMatch = attr.name.match(fullPattern),
            axisName;

        if(specMatch !== null) {

          specMatch = specMatch.slice(-3);
          axisName = specMatch[0];

          if(specMatch[0] === undefined){

            // if there is no axis find one:
            specMatch[0] = this._assocAxis(specMatch[1], axes);

            if(specMatch[0] === false) {
              // there is no context, so get outa here
              return; // skipt the attr
            }
          } else {
            specMatch[0] = specMatch[0].replace(/:$/, '');}

          specMatch.push(attr.value);
          specMatch.push(spec);

          spec = this._makeSpec.apply(this, specMatch);

        } else if(axisPattern.test(attr.name)){

          axisName = attr.name.match(axisPattern)[3];

          _.each(axes[axisName].contexts,
                 function(context){
                   this._makeSpec(axisName, context.name, 'class', context.name +
                            ' ' + attr.value, spec);
                 },
                 this);}},
             this);

      return spec;
    },

    _contextSpec: function(ctxObj, specs){
      if(specs.hasOwnProperty(ctxObj.axis) &&
         specs[ctxObj.axis].hasOwnProperty(ctxObj.ctx)){
        return specs[ctxObj.axis][ctxObj.ctx];
      }
      return {};
    },
    _resolveSpecs: function(currentContexts, specs){

      var changes={},
          moveFuncs=['append', 'prepend', 'before', 'after'];

      _.each(currentContexts, function(ctxObj){
        // if the axis or the context to not exist in the specs object
        // skip to the next one
        _.each(this._contextSpec(ctxObj, specs), function(val, func){

          if(func==='class'){
            if(!changes[func]){
              changes[func] = [];
            }
            changes[func] = _.union(changes[func], val.split(' '));

          } else if(((changes.move === undefined) ||
                     (changes.move.value === '')) &&
                    ($.inArray(func, moveFuncs) !== -1)){

            changes.move = {value:val, placement:func};

          } else {
            if((changes[func] === undefined) || (changes[func] === '')){
              changes[func]=val;
            }
          }
        }, this);
      }, this);
      return changes;
    },

    _currentContexts: function(axes) {
      var contexts = [];

      _.each(axes.__keys__, function(ID){
        if(axes[ID].current !== null) {
          contexts.push({ctx:axes[ID].current, axis:ID});
          return;
        }
      });

      return contexts;
    },

    _removeClasses: function(specs, axes) {

      var toRemove = [];

      _.each(axes.__keys__, function(key){

        var axis = axes[key];

        _.each(axis.contexts, function(ctx){

          // ignore the current context, those classes SHOULD be applied
          if(ctx.name === axis.current) {
            return;
          }
          var contextSpec = this._contextSpec(
            {axis:axis.ID, ctx:ctx.name}, specs),
              classes;

          if(contextSpec !== undefined) {
            if(contextSpec['class'] !== undefined) {
              classes = contextSpec['class'].split(' ');
              if(classes !== undefined){
                toRemove = _.union(toRemove, classes);
              }
            }
          }
        }, this);

      }, this);

      return toRemove;
    },

    _contextConfig: function(specs, axes){

      return this._resolveSpecs(this._currentContexts(axes), specs, axes);
    },

    _makeChanges: function(elm, specs, axes){

      if(_.isEmpty(axes)===false){
        var ctxConfig = this._contextConfig(specs, axes);

        _.each(ctxConfig, function(change, func){
          if(func==='move'){
            if( (specs.__placement__ !== change.placement) ||
                (specs.__move__ !== change.value)){

              $(change.value)[change.placement](elm);

              // save the last placement of the element so
              // we're not moving it around for no good reason
              specs.__placement__ = change.placement;
              specs.__move__ = change.value;
            }
          } else if(func === 'class') {

            var classes = elm.attr('class') || '';

            // the class add/remove formula
            classes = _.union(change,
                              _.difference(classes.split(' '),
                                           this._removeClasses(specs, axes)));

            elm.attr('class', classes.join(' '));

          } else {
            elm.attr(func, change);
          }
        }, this);
      }
      return elm;
    },

    _respond: function(axes, elms){
      // go through all of the responsive elms
      elms.each(_.bind(function(i, elm){
        var $elm = $(elm.elm);
        this._makeChanges($elm, elm.spec, axes);
        $elm.trigger('intent', this);
      }, this));
    },

    _contextualize: function(axisID, context, axes){
      axes[axisID].current = context;
      return axes;
    },

    // private props

    // axis test, does it begin with an underscore? for testing inside
    // spec objects
    _axis_test_pattern: new RegExp("^_[a-zA-Z0-9]"),

    // match a group after the underscore:
    _axis_match_pattern: new RegExp("^_([a-zA-Z0-9][_a-zA-Z0-9]*)"),

    // simple trim
    _trim_pattern:new RegExp( "^\s+|\s+$", "g" )
  };

  return Intention;
}));

/*!
 * context.js Library associated with > v0.9.6.2 of intention.js
 * http://intentionjs.com/
 *
 * Copyright 2011, 2013 Dowjones and other contributors
 * Released under the MIT license
 *
 */

(function () {

  'use strict';
  var context = function($, Intention){

    // create a brand spankin new intention object
    var intent=new Intention(),
      // placeholder for the horizontal axis
      horizontal_axis,
      orientation_axis;

    // throttle funtion used for keeping calls to the resize responive
    // callback to a minimum
    function throttle(callback, interval){
      var lastExec = new Date(),
        timer = null;

      return function(e){
        var d = new Date();
        if (d-lastExec < interval) {
          if (timer) {
            window.clearTimeout(timer);
          }
          var callbackWrapper = function(event){
            return function(){
              callback(event);
            };
          };
          timer = window.setTimeout(callbackWrapper(e), interval);
          return false;
        }
        callback(e);
        lastExec = d;
      };
    }

    // catchall
    // =======================================================================
    intent.responsive([{name:'base'}]).respond('base');

    // width context?
    // =======================================================================
    horizontal_axis = intent.responsive({
      ID:'width',
      contexts: [
        {name:'standard', min:1025},
        {name:'tablet', min:750},
        {name:'mobile', min:0}],
      // compare the return value of the callback to each context
      // return true for a match
      matcher: function(test, context){
        if(typeof test === 'string'){

          return test === context.name;
        }
        return test>=context.min;
      },
      // callback, return value is passed to matcher()
      // to compare against current context
      measure: function(arg){

        if(typeof arg === 'string'){
          return arg;
        }

        return $(window).width();
    }});

    // orientation context?
    // =======================================================================
    orientation_axis = intent.responsive({
      ID:'orientation',
      contexts: [{name:'portrait', rotation: 0},
        {name:'landscape', rotation:90}],
      matcher: function(measure, ctx){
        return measure === ctx.rotation;
      },
      measure: function(){
        var test = Math.abs(window.orientation);
        if(test > 0) {
          test = 180 - test;
        }
        return test;
      }
    });

    // ONE TIME CHECK AXES:
    // touch device?
    // =======================================================================
    intent.responsive({
      ID:'touch',
      contexts:[{name:'touch'}],
      matcher: function() {
        return "ontouchstart" in window;
      }}).respond();

    // retina display?
    // =======================================================================
    intent.responsive({
      ID: 'highres',
      // contexts
      contexts:[{name:'highres'}],
      // matching:
      matcher: function(){
        return window.devicePixelRatio > 1;
      }}).respond();

    // bind events to the window
    $(window).on('resize', throttle(horizontal_axis.respond, 100))
      .on('orientationchange', horizontal_axis.respond)
      .on('orientationchange', orientation_axis.respond);

    // register the current width and orientation without waiting for a window
    // resize
    horizontal_axis.respond();
    orientation_axis.respond();

    $(function(){
      // at doc ready grab all of the elements in the doc
      intent.elements(document);
    });

    // return the intention object so that it can be extended by other plugins
    return intent;
  };

  (function (root, factory) {
    if (typeof define === 'function' && define.amd) {
      // AMD. Register as an anonymous module.
      define('context', ['jquery', 'intention'], factory);
    } else {
      // Browser globals
      root.intent = factory(root.jQuery, root.Intention);
    }
  }(this, function ($, Intention) {
    return context($, Intention);
  }));
}).call(this);
/*! jQuery ResponsiveIframe - v0.0.3 - 2013-09-05
 * https://github.com/npr/responsiveiframe
 * Copyright (c) 2013 Irakli Nadareishvili; Licensed MIT, GPL */
"undefined" != typeof jQuery && !function (a) {
  var b = {xdomain: "*", ie: navigator.userAgent.toLowerCase().indexOf("msie") > -1, scrollToTop: !0}, c = {init: function () {
    return this.each(function () {
      var c = a(this);
      window.postMessage ? window.addEventListener ? window.addEventListener("message", function (a) {
        d.messageHandler(c, a)
      }, !1) : window.attachEvent && window.attachEvent("onmessage", function (a) {
        d.messageHandler(c, a)
      }, c) : setInterval(function () {
        var a = window.location.hash, e = a.match(/^#h(\d+)(s?)$/);
        e && (d.setHeight(c, e[1]), b.scrollToTop && "s" === e[2] && scroll(0, 0))
      }, 150)
    })
  }}, d = {messageHandler: function (a, c) {
    var e, f, g, h;
    if ("*" !== b.xdomain) {
      var i = new RegExp(b.xdomain + "$");
      if ("null" == c.origin)throw new Error("messageHandler( elem, e): There is no origin.  You are viewing the page from your file system.  Please run through a web server.");
      if (!c.origin.match(i))throw new Error("messageHandler( elem, e): The orgin doesn't match the responsiveiframe  xdomain.");
      g = !0
    }
    if (("*" === b.xdomain || g) && (h = c.data + "", f = h.match(/^(\d+)(s?)$/), f && 3 === f.length)) {
      if (e = parseInt(f[1], 10), !isNaN(e))try {
        d.setHeight(a, e)
      } catch (j) {
      }
      b.scrollToTop && "s" === f[2] && scroll(0, 0)
    }
  }, setHeight           : function (a, b) {
    a.css("height", b + "px")
  }, getDocHeight        : function () {
    var a = document;
    return Math.min(Math.max(a.body.scrollHeight, a.documentElement.scrollHeight), Math.max(a.body.offsetHeight, a.documentElement.offsetHeight), Math.max(a.body.clientHeight, a.documentElement.clientHeight))
  }};
  a.fn.responsiveIframe = function (d) {
    return c[d] ? c[d].apply(this, Array.prototype.slice.call(arguments, 1)) : "object" != typeof d && d ? (a.error("Method " + d + " does not exist on jQuery.responsiveIframe"), void 0) : (a.extend(b, arguments[0]), c.init.apply(this))
  }
}(jQuery), function () {
  function a() {
    return new d
  }

  var b, c, d = function () {
    b = this
  };
  d.prototype.allowResponsiveEmbedding = function () {
    window.addEventListener ? (window.addEventListener("load", b.messageParent, !1), window.addEventListener("resize", b.messageParent, !1)) : window.attachEvent && (window.attachEvent("onload", b.messageParent), window.attachEvent("onresize", b.messageParent))
  }, d.prototype.messageParent = function (a) {
    var b = document.body.offsetHeight;
    b = a ? b + "s" : b, top.postMessage ? top.postMessage(b, "*") : window.location.hash = "h" + b
  }, "undefined" == typeof exports ? window.responsiveIframe = a : c.exports.responsiveIframe = a
}();
/*! fancyBox v2.1.5 fancyapps.com | fancyapps.com/fancybox/#license */
(function(r,G,f,v){var J=f("html"),n=f(r),p=f(G),b=f.fancybox=function(){b.open.apply(this,arguments)},I=navigator.userAgent.match(/msie/i),B=null,s=G.createTouch!==v,t=function(a){return a&&a.hasOwnProperty&&a instanceof f},q=function(a){return a&&"string"===f.type(a)},E=function(a){return q(a)&&0<a.indexOf("%")},l=function(a,d){var e=parseInt(a,10)||0;d&&E(a)&&(e*=b.getViewport()[d]/100);return Math.ceil(e)},w=function(a,b){return l(a,b)+"px"};f.extend(b,{version:"2.1.5",defaults:{padding:15,margin:20,
  width:800,height:600,minWidth:100,minHeight:100,maxWidth:9999,maxHeight:9999,pixelRatio:1,autoSize:!0,autoHeight:!1,autoWidth:!1,autoResize:!0,autoCenter:!s,fitToView:!0,aspectRatio:!1,topRatio:0.5,leftRatio:0.5,scrolling:"auto",wrapCSS:"",arrows:!0,closeBtn:!0,closeClick:!1,nextClick:!1,mouseWheel:!0,autoPlay:!1,playSpeed:3E3,preload:3,modal:!1,loop:!0,ajax:{dataType:"html",headers:{"X-fancyBox":!0}},iframe:{scrolling:"auto",preload:!0},swf:{wmode:"transparent",allowfullscreen:"true",allowscriptaccess:"always"},
  keys:{next:{13:"left",34:"up",39:"left",40:"up"},prev:{8:"right",33:"down",37:"right",38:"down"},close:[27],play:[32],toggle:[70]},direction:{next:"left",prev:"right"},scrollOutside:!0,index:0,type:null,href:null,content:null,title:null,tpl:{wrap:'<div class="fancybox-wrap" tabIndex="-1"><div class="fancybox-skin"><div class="fancybox-outer"><div class="fancybox-inner"></div></div></div></div>',image:'<img class="fancybox-image" src="{href}" alt="" />',iframe:'<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen'+
  (I?' allowtransparency="true"':"")+"></iframe>",error:'<p class="fancybox-error">The requested content cannot be loaded.<br/>Please try again later.</p>',closeBtn:'<a title="Close" class="fancybox-item fancybox-close" href="javascript:;"></a>',next:'<a title="Next" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>',prev:'<a title="Previous" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>'},openEffect:"fade",openSpeed:250,openEasing:"swing",openOpacity:!0,
  openMethod:"zoomIn",closeEffect:"fade",closeSpeed:250,closeEasing:"swing",closeOpacity:!0,closeMethod:"zoomOut",nextEffect:"elastic",nextSpeed:250,nextEasing:"swing",nextMethod:"changeIn",prevEffect:"elastic",prevSpeed:250,prevEasing:"swing",prevMethod:"changeOut",helpers:{overlay:!0,title:!0},onCancel:f.noop,beforeLoad:f.noop,afterLoad:f.noop,beforeShow:f.noop,afterShow:f.noop,beforeChange:f.noop,beforeClose:f.noop,afterClose:f.noop},group:{},opts:{},previous:null,coming:null,current:null,isActive:!1,
  isOpen:!1,isOpened:!1,wrap:null,skin:null,outer:null,inner:null,player:{timer:null,isActive:!1},ajaxLoad:null,imgPreload:null,transitions:{},helpers:{},open:function(a,d){if(a&&(f.isPlainObject(d)||(d={}),!1!==b.close(!0)))return f.isArray(a)||(a=t(a)?f(a).get():[a]),f.each(a,function(e,c){var k={},g,h,j,m,l;"object"===f.type(c)&&(c.nodeType&&(c=f(c)),t(c)?(k={href:c.data("fancybox-href")||c.attr("href"),title:c.data("fancybox-title")||c.attr("title"),isDom:!0,element:c},f.metadata&&f.extend(!0,k,
    c.metadata())):k=c);g=d.href||k.href||(q(c)?c:null);h=d.title!==v?d.title:k.title||"";m=(j=d.content||k.content)?"html":d.type||k.type;!m&&k.isDom&&(m=c.data("fancybox-type"),m||(m=(m=c.prop("class").match(/fancybox\.(\w+)/))?m[1]:null));q(g)&&(m||(b.isImage(g)?m="image":b.isSWF(g)?m="swf":"#"===g.charAt(0)?m="inline":q(c)&&(m="html",j=c)),"ajax"===m&&(l=g.split(/\s+/,2),g=l.shift(),l=l.shift()));j||("inline"===m?g?j=f(q(g)?g.replace(/.*(?=#[^\s]+$)/,""):g):k.isDom&&(j=c):"html"===m?j=g:!m&&(!g&&
  k.isDom)&&(m="inline",j=c));f.extend(k,{href:g,type:m,content:j,title:h,selector:l});a[e]=k}),b.opts=f.extend(!0,{},b.defaults,d),d.keys!==v&&(b.opts.keys=d.keys?f.extend({},b.defaults.keys,d.keys):!1),b.group=a,b._start(b.opts.index)},cancel:function(){var a=b.coming;a&&!1!==b.trigger("onCancel")&&(b.hideLoading(),b.ajaxLoad&&b.ajaxLoad.abort(),b.ajaxLoad=null,b.imgPreload&&(b.imgPreload.onload=b.imgPreload.onerror=null),a.wrap&&a.wrap.stop(!0,!0).trigger("onReset").remove(),b.coming=null,b.current||
  b._afterZoomOut(a))},close:function(a){b.cancel();!1!==b.trigger("beforeClose")&&(b.unbindEvents(),b.isActive&&(!b.isOpen||!0===a?(f(".fancybox-wrap").stop(!0).trigger("onReset").remove(),b._afterZoomOut()):(b.isOpen=b.isOpened=!1,b.isClosing=!0,f(".fancybox-item, .fancybox-nav").remove(),b.wrap.stop(!0,!0).removeClass("fancybox-opened"),b.transitions[b.current.closeMethod]())))},play:function(a){var d=function(){clearTimeout(b.player.timer)},e=function(){d();b.current&&b.player.isActive&&(b.player.timer=
    setTimeout(b.next,b.current.playSpeed))},c=function(){d();p.unbind(".player");b.player.isActive=!1;b.trigger("onPlayEnd")};if(!0===a||!b.player.isActive&&!1!==a){if(b.current&&(b.current.loop||b.current.index<b.group.length-1))b.player.isActive=!0,p.bind({"onCancel.player beforeClose.player":c,"onUpdate.player":e,"beforeLoad.player":d}),e(),b.trigger("onPlayStart")}else c()},next:function(a){var d=b.current;d&&(q(a)||(a=d.direction.next),b.jumpto(d.index+1,a,"next"))},prev:function(a){var d=b.current;
    d&&(q(a)||(a=d.direction.prev),b.jumpto(d.index-1,a,"prev"))},jumpto:function(a,d,e){var c=b.current;c&&(a=l(a),b.direction=d||c.direction[a>=c.index?"next":"prev"],b.router=e||"jumpto",c.loop&&(0>a&&(a=c.group.length+a%c.group.length),a%=c.group.length),c.group[a]!==v&&(b.cancel(),b._start(a)))},reposition:function(a,d){var e=b.current,c=e?e.wrap:null,k;c&&(k=b._getPosition(d),a&&"scroll"===a.type?(delete k.position,c.stop(!0,!0).animate(k,200)):(c.css(k),e.pos=f.extend({},e.dim,k)))},update:function(a){var d=
    a&&a.type,e=!d||"orientationchange"===d;e&&(clearTimeout(B),B=null);b.isOpen&&!B&&(B=setTimeout(function(){var c=b.current;c&&!b.isClosing&&(b.wrap.removeClass("fancybox-tmp"),(e||"load"===d||"resize"===d&&c.autoResize)&&b._setDimension(),"scroll"===d&&c.canShrink||b.reposition(a),b.trigger("onUpdate"),B=null)},e&&!s?0:300))},toggle:function(a){b.isOpen&&(b.current.fitToView="boolean"===f.type(a)?a:!b.current.fitToView,s&&(b.wrap.removeAttr("style").addClass("fancybox-tmp"),b.trigger("onUpdate")),
    b.update())},hideLoading:function(){p.unbind(".loading");f("#fancybox-loading").remove()},showLoading:function(){var a,d;b.hideLoading();a=f('<div id="fancybox-loading"><div></div></div>').click(b.cancel).appendTo("body");p.bind("keydown.loading",function(a){if(27===(a.which||a.keyCode))a.preventDefault(),b.cancel()});b.defaults.fixed||(d=b.getViewport(),a.css({position:"absolute",top:0.5*d.h+d.y,left:0.5*d.w+d.x}))},getViewport:function(){var a=b.current&&b.current.locked||!1,d={x:n.scrollLeft(),
    y:n.scrollTop()};a?(d.w=a[0].clientWidth,d.h=a[0].clientHeight):(d.w=s&&r.innerWidth?r.innerWidth:n.width(),d.h=s&&r.innerHeight?r.innerHeight:n.height());return d},unbindEvents:function(){b.wrap&&t(b.wrap)&&b.wrap.unbind(".fb");p.unbind(".fb");n.unbind(".fb")},bindEvents:function(){var a=b.current,d;a&&(n.bind("orientationchange.fb"+(s?"":" resize.fb")+(a.autoCenter&&!a.locked?" scroll.fb":""),b.update),(d=a.keys)&&p.bind("keydown.fb",function(e){var c=e.which||e.keyCode,k=e.target||e.srcElement;
    if(27===c&&b.coming)return!1;!e.ctrlKey&&(!e.altKey&&!e.shiftKey&&!e.metaKey&&(!k||!k.type&&!f(k).is("[contenteditable]")))&&f.each(d,function(d,k){if(1<a.group.length&&k[c]!==v)return b[d](k[c]),e.preventDefault(),!1;if(-1<f.inArray(c,k))return b[d](),e.preventDefault(),!1})}),f.fn.mousewheel&&a.mouseWheel&&b.wrap.bind("mousewheel.fb",function(d,c,k,g){for(var h=f(d.target||null),j=!1;h.length&&!j&&!h.is(".fancybox-skin")&&!h.is(".fancybox-wrap");)j=h[0]&&!(h[0].style.overflow&&"hidden"===h[0].style.overflow)&&
  (h[0].clientWidth&&h[0].scrollWidth>h[0].clientWidth||h[0].clientHeight&&h[0].scrollHeight>h[0].clientHeight),h=f(h).parent();if(0!==c&&!j&&1<b.group.length&&!a.canShrink){if(0<g||0<k)b.prev(0<g?"down":"left");else if(0>g||0>k)b.next(0>g?"up":"right");d.preventDefault()}}))},trigger:function(a,d){var e,c=d||b.coming||b.current;if(c){f.isFunction(c[a])&&(e=c[a].apply(c,Array.prototype.slice.call(arguments,1)));if(!1===e)return!1;c.helpers&&f.each(c.helpers,function(d,e){if(e&&b.helpers[d]&&f.isFunction(b.helpers[d][a]))b.helpers[d][a](f.extend(!0,
    {},b.helpers[d].defaults,e),c)});p.trigger(a)}},isImage:function(a){return q(a)&&a.match(/(^data:image\/.*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg)((\?|#).*)?$)/i)},isSWF:function(a){return q(a)&&a.match(/\.(swf)((\?|#).*)?$/i)},_start:function(a){var d={},e,c;a=l(a);e=b.group[a]||null;if(!e)return!1;d=f.extend(!0,{},b.opts,e);e=d.margin;c=d.padding;"number"===f.type(e)&&(d.margin=[e,e,e,e]);"number"===f.type(c)&&(d.padding=[c,c,c,c]);d.modal&&f.extend(!0,d,{closeBtn:!1,closeClick:!1,nextClick:!1,arrows:!1,
    mouseWheel:!1,keys:null,helpers:{overlay:{closeClick:!1}}});d.autoSize&&(d.autoWidth=d.autoHeight=!0);"auto"===d.width&&(d.autoWidth=!0);"auto"===d.height&&(d.autoHeight=!0);d.group=b.group;d.index=a;b.coming=d;if(!1===b.trigger("beforeLoad"))b.coming=null;else{c=d.type;e=d.href;if(!c)return b.coming=null,b.current&&b.router&&"jumpto"!==b.router?(b.current.index=a,b[b.router](b.direction)):!1;b.isActive=!0;if("image"===c||"swf"===c)d.autoHeight=d.autoWidth=!1,d.scrolling="visible";"image"===c&&(d.aspectRatio=
    !0);"iframe"===c&&s&&(d.scrolling="scroll");d.wrap=f(d.tpl.wrap).addClass("fancybox-"+(s?"mobile":"desktop")+" fancybox-type-"+c+" fancybox-tmp "+d.wrapCSS).appendTo(d.parent||"body");f.extend(d,{skin:f(".fancybox-skin",d.wrap),outer:f(".fancybox-outer",d.wrap),inner:f(".fancybox-inner",d.wrap)});f.each(["Top","Right","Bottom","Left"],function(a,b){d.skin.css("padding"+b,w(d.padding[a]))});b.trigger("onReady");if("inline"===c||"html"===c){if(!d.content||!d.content.length)return b._error("content")}else if(!e)return b._error("href");
    "image"===c?b._loadImage():"ajax"===c?b._loadAjax():"iframe"===c?b._loadIframe():b._afterLoad()}},_error:function(a){f.extend(b.coming,{type:"html",autoWidth:!0,autoHeight:!0,minWidth:0,minHeight:0,scrolling:"no",hasError:a,content:b.coming.tpl.error});b._afterLoad()},_loadImage:function(){var a=b.imgPreload=new Image;a.onload=function(){this.onload=this.onerror=null;b.coming.width=this.width/b.opts.pixelRatio;b.coming.height=this.height/b.opts.pixelRatio;b._afterLoad()};a.onerror=function(){this.onload=
    this.onerror=null;b._error("image")};a.src=b.coming.href;!0!==a.complete&&b.showLoading()},_loadAjax:function(){var a=b.coming;b.showLoading();b.ajaxLoad=f.ajax(f.extend({},a.ajax,{url:a.href,error:function(a,e){b.coming&&"abort"!==e?b._error("ajax",a):b.hideLoading()},success:function(d,e){"success"===e&&(a.content=d,b._afterLoad())}}))},_loadIframe:function(){var a=b.coming,d=f(a.tpl.iframe.replace(/\{rnd\}/g,(new Date).getTime())).attr("scrolling",s?"auto":a.iframe.scrolling).attr("src",a.href);
    f(a.wrap).bind("onReset",function(){try{f(this).find("iframe").hide().attr("src","//about:blank").end().empty()}catch(a){}});a.iframe.preload&&(b.showLoading(),d.one("load",function(){f(this).data("ready",1);s||f(this).bind("load.fb",b.update);f(this).parents(".fancybox-wrap").width("100%").removeClass("fancybox-tmp").show();b._afterLoad()}));a.content=d.appendTo(a.inner);a.iframe.preload||b._afterLoad()},_preloadImages:function(){var a=b.group,d=b.current,e=a.length,c=d.preload?Math.min(d.preload,
    e-1):0,f,g;for(g=1;g<=c;g+=1)f=a[(d.index+g)%e],"image"===f.type&&f.href&&((new Image).src=f.href)},_afterLoad:function(){var a=b.coming,d=b.current,e,c,k,g,h;b.hideLoading();if(a&&!1!==b.isActive)if(!1===b.trigger("afterLoad",a,d))a.wrap.stop(!0).trigger("onReset").remove(),b.coming=null;else{d&&(b.trigger("beforeChange",d),d.wrap.stop(!0).removeClass("fancybox-opened").find(".fancybox-item, .fancybox-nav").remove());b.unbindEvents();e=a.content;c=a.type;k=a.scrolling;f.extend(b,{wrap:a.wrap,skin:a.skin,
    outer:a.outer,inner:a.inner,current:a,previous:d});g=a.href;switch(c){case "inline":case "ajax":case "html":a.selector?e=f("<div>").html(e).find(a.selector):t(e)&&(e.data("fancybox-placeholder")||e.data("fancybox-placeholder",f('<div class="fancybox-placeholder"></div>').insertAfter(e).hide()),e=e.show().detach(),a.wrap.bind("onReset",function(){f(this).find(e).length&&e.hide().replaceAll(e.data("fancybox-placeholder")).data("fancybox-placeholder",!1)}));break;case "image":e=a.tpl.image.replace("{href}",
    g);break;case "swf":e='<object id="fancybox-swf" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="100%" height="100%"><param name="movie" value="'+g+'"></param>',h="",f.each(a.swf,function(a,b){e+='<param name="'+a+'" value="'+b+'"></param>';h+=" "+a+'="'+b+'"'}),e+='<embed src="'+g+'" type="application/x-shockwave-flash" width="100%" height="100%"'+h+"></embed></object>"}(!t(e)||!e.parent().is(a.inner))&&a.inner.append(e);b.trigger("beforeShow");a.inner.css("overflow","yes"===k?"scroll":
    "no"===k?"hidden":k);b._setDimension();b.reposition();b.isOpen=!1;b.coming=null;b.bindEvents();if(b.isOpened){if(d.prevMethod)b.transitions[d.prevMethod]()}else f(".fancybox-wrap").not(a.wrap).stop(!0).trigger("onReset").remove();b.transitions[b.isOpened?a.nextMethod:a.openMethod]();b._preloadImages()}},_setDimension:function(){var a=b.getViewport(),d=0,e=!1,c=!1,e=b.wrap,k=b.skin,g=b.inner,h=b.current,c=h.width,j=h.height,m=h.minWidth,u=h.minHeight,n=h.maxWidth,p=h.maxHeight,s=h.scrolling,q=h.scrollOutside?
    h.scrollbarWidth:0,x=h.margin,y=l(x[1]+x[3]),r=l(x[0]+x[2]),v,z,t,C,A,F,B,D,H;e.add(k).add(g).width("auto").height("auto").removeClass("fancybox-tmp");x=l(k.outerWidth(!0)-k.width());v=l(k.outerHeight(!0)-k.height());z=y+x;t=r+v;C=E(c)?(a.w-z)*l(c)/100:c;A=E(j)?(a.h-t)*l(j)/100:j;if("iframe"===h.type){if(H=h.content,h.autoHeight&&1===H.data("ready"))try{H[0].contentWindow.document.location&&(g.width(C).height(9999),F=H.contents().find("body"),q&&F.css("overflow-x","hidden"),A=F.outerHeight(!0))}catch(G){}}else if(h.autoWidth||
    h.autoHeight)g.addClass("fancybox-tmp"),h.autoWidth||g.width(C),h.autoHeight||g.height(A),h.autoWidth&&(C=g.width()),h.autoHeight&&(A=g.height()),g.removeClass("fancybox-tmp");c=l(C);j=l(A);D=C/A;m=l(E(m)?l(m,"w")-z:m);n=l(E(n)?l(n,"w")-z:n);u=l(E(u)?l(u,"h")-t:u);p=l(E(p)?l(p,"h")-t:p);F=n;B=p;h.fitToView&&(n=Math.min(a.w-z,n),p=Math.min(a.h-t,p));z=a.w-y;r=a.h-r;h.aspectRatio?(c>n&&(c=n,j=l(c/D)),j>p&&(j=p,c=l(j*D)),c<m&&(c=m,j=l(c/D)),j<u&&(j=u,c=l(j*D))):(c=Math.max(m,Math.min(c,n)),h.autoHeight&&
  "iframe"!==h.type&&(g.width(c),j=g.height()),j=Math.max(u,Math.min(j,p)));if(h.fitToView)if(g.width(c).height(j),e.width(c+x),a=e.width(),y=e.height(),h.aspectRatio)for(;(a>z||y>r)&&(c>m&&j>u)&&!(19<d++);)j=Math.max(u,Math.min(p,j-10)),c=l(j*D),c<m&&(c=m,j=l(c/D)),c>n&&(c=n,j=l(c/D)),g.width(c).height(j),e.width(c+x),a=e.width(),y=e.height();else c=Math.max(m,Math.min(c,c-(a-z))),j=Math.max(u,Math.min(j,j-(y-r)));q&&("auto"===s&&j<A&&c+x+q<z)&&(c+=q);g.width(c).height(j);e.width(c+x);a=e.width();
    y=e.height();e=(a>z||y>r)&&c>m&&j>u;c=h.aspectRatio?c<F&&j<B&&c<C&&j<A:(c<F||j<B)&&(c<C||j<A);f.extend(h,{dim:{width:w(a),height:w(y)},origWidth:C,origHeight:A,canShrink:e,canExpand:c,wPadding:x,hPadding:v,wrapSpace:y-k.outerHeight(!0),skinSpace:k.height()-j});!H&&(h.autoHeight&&j>u&&j<p&&!c)&&g.height("auto")},_getPosition:function(a){var d=b.current,e=b.getViewport(),c=d.margin,f=b.wrap.width()+c[1]+c[3],g=b.wrap.height()+c[0]+c[2],c={position:"absolute",top:c[0],left:c[3]};d.autoCenter&&d.fixed&&
  !a&&g<=e.h&&f<=e.w?c.position="fixed":d.locked||(c.top+=e.y,c.left+=e.x);c.top=w(Math.max(c.top,c.top+(e.h-g)*d.topRatio));c.left=w(Math.max(c.left,c.left+(e.w-f)*d.leftRatio));return c},_afterZoomIn:function(){var a=b.current;a&&(b.isOpen=b.isOpened=!0,b.wrap.css("overflow","visible").addClass("fancybox-opened"),b.update(),(a.closeClick||a.nextClick&&1<b.group.length)&&b.inner.css("cursor","pointer").bind("click.fb",function(d){!f(d.target).is("a")&&!f(d.target).parent().is("a")&&(d.preventDefault(),
    b[a.closeClick?"close":"next"]())}),a.closeBtn&&f(a.tpl.closeBtn).appendTo(b.skin).bind("click.fb",function(a){a.preventDefault();b.close()}),a.arrows&&1<b.group.length&&((a.loop||0<a.index)&&f(a.tpl.prev).appendTo(b.outer).bind("click.fb",b.prev),(a.loop||a.index<b.group.length-1)&&f(a.tpl.next).appendTo(b.outer).bind("click.fb",b.next)),b.trigger("afterShow"),!a.loop&&a.index===a.group.length-1?b.play(!1):b.opts.autoPlay&&!b.player.isActive&&(b.opts.autoPlay=!1,b.play()))},_afterZoomOut:function(a){a=
    a||b.current;f(".fancybox-wrap").trigger("onReset").remove();f.extend(b,{group:{},opts:{},router:!1,current:null,isActive:!1,isOpened:!1,isOpen:!1,isClosing:!1,wrap:null,skin:null,outer:null,inner:null});b.trigger("afterClose",a)}});b.transitions={getOrigPosition:function(){var a=b.current,d=a.element,e=a.orig,c={},f=50,g=50,h=a.hPadding,j=a.wPadding,m=b.getViewport();!e&&(a.isDom&&d.is(":visible"))&&(e=d.find("img:first"),e.length||(e=d));t(e)?(c=e.offset(),e.is("img")&&(f=e.outerWidth(),g=e.outerHeight())):
  (c.top=m.y+(m.h-g)*a.topRatio,c.left=m.x+(m.w-f)*a.leftRatio);if("fixed"===b.wrap.css("position")||a.locked)c.top-=m.y,c.left-=m.x;return c={top:w(c.top-h*a.topRatio),left:w(c.left-j*a.leftRatio),width:w(f+j),height:w(g+h)}},step:function(a,d){var e,c,f=d.prop;c=b.current;var g=c.wrapSpace,h=c.skinSpace;if("width"===f||"height"===f)e=d.end===d.start?1:(a-d.start)/(d.end-d.start),b.isClosing&&(e=1-e),c="width"===f?c.wPadding:c.hPadding,c=a-c,b.skin[f](l("width"===f?c:c-g*e)),b.inner[f](l("width"===
f?c:c-g*e-h*e))},zoomIn:function(){var a=b.current,d=a.pos,e=a.openEffect,c="elastic"===e,k=f.extend({opacity:1},d);delete k.position;c?(d=this.getOrigPosition(),a.openOpacity&&(d.opacity=0.1)):"fade"===e&&(d.opacity=0.1);b.wrap.css(d).animate(k,{duration:"none"===e?0:a.openSpeed,easing:a.openEasing,step:c?this.step:null,complete:b._afterZoomIn})},zoomOut:function(){var a=b.current,d=a.closeEffect,e="elastic"===d,c={opacity:0.1};e&&(c=this.getOrigPosition(),a.closeOpacity&&(c.opacity=0.1));b.wrap.animate(c,
  {duration:"none"===d?0:a.closeSpeed,easing:a.closeEasing,step:e?this.step:null,complete:b._afterZoomOut})},changeIn:function(){var a=b.current,d=a.nextEffect,e=a.pos,c={opacity:1},f=b.direction,g;e.opacity=0.1;"elastic"===d&&(g="down"===f||"up"===f?"top":"left","down"===f||"right"===f?(e[g]=w(l(e[g])-200),c[g]="+=200px"):(e[g]=w(l(e[g])+200),c[g]="-=200px"));"none"===d?b._afterZoomIn():b.wrap.css(e).animate(c,{duration:a.nextSpeed,easing:a.nextEasing,complete:b._afterZoomIn})},changeOut:function(){var a=
  b.previous,d=a.prevEffect,e={opacity:0.1},c=b.direction;"elastic"===d&&(e["down"===c||"up"===c?"top":"left"]=("up"===c||"left"===c?"-":"+")+"=200px");a.wrap.animate(e,{duration:"none"===d?0:a.prevSpeed,easing:a.prevEasing,complete:function(){f(this).trigger("onReset").remove()}})}};b.helpers.overlay={defaults:{closeClick:!0,speedOut:200,showEarly:!0,css:{},locked:!s,fixed:!0},overlay:null,fixed:!1,el:f("html"),create:function(a){a=f.extend({},this.defaults,a);this.overlay&&this.close();this.overlay=
  f('<div class="fancybox-overlay"></div>').appendTo(b.coming?b.coming.parent:a.parent);this.fixed=!1;a.fixed&&b.defaults.fixed&&(this.overlay.addClass("fancybox-overlay-fixed"),this.fixed=!0)},open:function(a){var d=this;a=f.extend({},this.defaults,a);this.overlay?this.overlay.unbind(".overlay").width("auto").height("auto"):this.create(a);this.fixed||(n.bind("resize.overlay",f.proxy(this.update,this)),this.update());a.closeClick&&this.overlay.bind("click.overlay",function(a){if(f(a.target).hasClass("fancybox-overlay"))return b.isActive?
  b.close():d.close(),!1});this.overlay.css(a.css).show()},close:function(){var a,b;n.unbind("resize.overlay");this.el.hasClass("fancybox-lock")&&(f(".fancybox-margin").removeClass("fancybox-margin"),a=n.scrollTop(),b=n.scrollLeft(),this.el.removeClass("fancybox-lock"),n.scrollTop(a).scrollLeft(b));f(".fancybox-overlay").remove().hide();f.extend(this,{overlay:null,fixed:!1})},update:function(){var a="100%",b;this.overlay.width(a).height("100%");I?(b=Math.max(G.documentElement.offsetWidth,G.body.offsetWidth),
p.width()>b&&(a=p.width())):p.width()>n.width()&&(a=p.width());this.overlay.width(a).height(p.height())},onReady:function(a,b){var e=this.overlay;f(".fancybox-overlay").stop(!0,!0);e||this.create(a);a.locked&&(this.fixed&&b.fixed)&&(e||(this.margin=p.height()>n.height()?f("html").css("margin-right").replace("px",""):!1),b.locked=this.overlay.append(b.wrap),b.fixed=!1);!0===a.showEarly&&this.beforeShow.apply(this,arguments)},beforeShow:function(a,b){var e,c;b.locked&&(!1!==this.margin&&(f("*").filter(function(){return"fixed"===
f(this).css("position")&&!f(this).hasClass("fancybox-overlay")&&!f(this).hasClass("fancybox-wrap")}).addClass("fancybox-margin"),this.el.addClass("fancybox-margin")),e=n.scrollTop(),c=n.scrollLeft(),this.el.addClass("fancybox-lock"),n.scrollTop(e).scrollLeft(c));this.open(a)},onUpdate:function(){this.fixed||this.update()},afterClose:function(a){this.overlay&&!b.coming&&this.overlay.fadeOut(a.speedOut,f.proxy(this.close,this))}};b.helpers.title={defaults:{type:"float",position:"bottom"},beforeShow:function(a){var d=
  b.current,e=d.title,c=a.type;f.isFunction(e)&&(e=e.call(d.element,d));if(q(e)&&""!==f.trim(e)){d=f('<div class="fancybox-title fancybox-title-'+c+'-wrap">'+e+"</div>");switch(c){case "inside":c=b.skin;break;case "outside":c=b.wrap;break;case "over":c=b.inner;break;default:c=b.skin,d.appendTo("body"),I&&d.width(d.width()),d.wrapInner('<span class="child"></span>'),b.current.margin[2]+=Math.abs(l(d.css("margin-bottom")))}d["top"===a.position?"prependTo":"appendTo"](c)}}};f.fn.fancybox=function(a){var d,
  e=f(this),c=this.selector||"",k=function(g){var h=f(this).blur(),j=d,k,l;!g.ctrlKey&&(!g.altKey&&!g.shiftKey&&!g.metaKey)&&!h.is(".fancybox-wrap")&&(k=a.groupAttr||"data-fancybox-group",l=h.attr(k),l||(k="rel",l=h.get(0)[k]),l&&(""!==l&&"nofollow"!==l)&&(h=c.length?f(c):e,h=h.filter("["+k+'="'+l+'"]'),j=h.index(this)),a.index=j,!1!==b.open(h,a)&&g.preventDefault())};a=a||{};d=a.index||0;!c||!1===a.live?e.unbind("click.fb-start").bind("click.fb-start",k):p.undelegate(c,"click.fb-start").delegate(c+
":not('.fancybox-item, .fancybox-nav')","click.fb-start",k);this.filter("[data-fancybox-start=1]").trigger("click");return this};p.ready(function(){var a,d;f.scrollbarWidth===v&&(f.scrollbarWidth=function(){var a=f('<div style="width:50px;height:50px;overflow:auto"><div/></div>').appendTo("body"),b=a.children(),b=b.innerWidth()-b.height(99).innerWidth();a.remove();return b});if(f.support.fixedPosition===v){a=f.support;d=f('<div style="position:fixed;top:20px;"></div>').appendTo("body");var e=20===
  d[0].offsetTop||15===d[0].offsetTop;d.remove();a.fixedPosition=e}f.extend(b.defaults,{scrollbarWidth:f.scrollbarWidth(),fixed:f.support.fixedPosition,parent:f("body")});a=f(r).width();J.addClass("fancybox-lock-test");d=f(r).width();J.removeClass("fancybox-lock-test");f("<style type='text/css'>.fancybox-margin{margin-right:"+(d-a)+"px;}</style>").appendTo("head")})})(window,document,jQuery);
(function ($, window, undefined) {
  'use strict';

  var isMobile, isTablet, isTouchDevice, searchform, thumbnail, mobiletoggle;

  isMobile = function() {
    return $(window).width() < 768;
  };

  isTablet = function() {
    return $(window).width() < 1024;
  };

  isTouchDevice = function () {
    return 'ontouchstart' in window || window.navigator.msMaxTouchPoints;
  };

  function Expandable(element, options) {
    var defaults = {
      title  : '.fte-expandable-title',
      body   : '.fte-expandable-content',
      onOpen : function () {
      },
      onClose: function () {
      },
      onInit: function() {
      }
    };
    this.element = element;
    this.options = $.extend({}, defaults, options);
    this.init();
  }

  Expandable.prototype = {
    init      : function () {
      var self = this,
          title = $(self.element).children(self.options.title);
      title.on('click',function (e) {
        e.preventDefault();
        self.fte_toggle(this);
      }).append('<span class="fte-expandable-icon"></span>');
      if ($(self.element).find('.metadata').length) {
        title.on('click',function (e) {
          title.find('.article-title a').trigger('click.fte-history');
          title.stop().fadeTo(100, 0.4).fadeTo(300, 1);
        });
        title.on('click', '.topic a', function(e) {
          e.stopPropagation();
        });
        title.on('click', '.metadata a', function(e) {
          e.stopPropagation();
        });
        title.on('click', '.fte-expandable-icon', function(e) {
          e.stopPropagation();
          e.preventDefault();
          title.find('.article-title a').trigger('click');
        });
        title.on('click', '.metadata span.share a', function(e) {
          e.preventDefault();
          var posX = $(this).position().left + $(this).width() + 5,
              thisshare = $(this).parents('.metadata').next('div.share');
          $('div.share').not(thisshare).hide();
          thisshare.css('left', posX + 'px').toggle();
        });
      }
      $('[data-expandable="' + this.element.id + '"]').on('click', function (e) {
        self.fte_open(this, 0);
      });
      self.options.onInit.call(self);
    },
    fte_open  : function (target, duration) {
      var self = this,
          closetext = $(target).data('close-text');
      duration = typeof duration !== 'undefined' ? duration : 600;
      if (closetext) {
        $(target).html(closetext + '<span class="fte-expandable-icon"></span>');
      }
      $(this.element).addClass('fte-expandable-open').children(this.options.body)
      .animate({opacity: 'show', height: 'show'}, duration, function() {
        $(window).trigger('resize');
        self.options.onOpen.call(self);
      });
      if ($(this.element).parents('.single-col').length) {
        $(this.element).parents('.single-col').css('height', 'auto');
      } else {
        $(window).trigger('resize');
      }
    },
    fte_close : function (target, duration) {
      var self = this,
          opentext = $(target).data('open-text');
      duration = typeof duration !== 'undefined' ? duration : 600;
      if (opentext) {
        $(target).html(opentext + '<span class="fte-expandable-icon"></span>');
      }
      $(this.element).removeClass('fte-expandable-open').children(this.options.body)
      .animate({opacity: 'hide', height: 'hide'}, duration, function() {
        $(window).trigger('resize');
        self.options.onClose.call(self);
      });
    },
    fte_toggle: function (target) {
      if ($(this.element).hasClass('fte-expandable-open')) {
        this.fte_close(target);
      } else {
        this.fte_open(target);
      }
    }
  };

  function Tabs(element, options) {
    var defaults = {
      title: '.fte-tabs-title',
      body : '.fte-tabs-content'
    };
    this.element = element;
    this.options = $.extend({}, defaults, options);
    this.init();
  }

  Tabs.prototype = {
    init    : function () {
      var self = this,
          title = $(self.element).find(self.options.title);
      title.find('li').first().addClass('active');
      title.find('li').on('click', function (e) {
        e.preventDefault();
        self.fte_show(this);
      });
    },
    fte_show: function (target) {
      var content = $('a', target).attr('href');
      $(target).addClass('active').siblings('li').removeClass('active');
      $(content, this.element).show().siblings('div').hide();
      $(window).trigger('resize');
    }
  };

  function Sameheightcol(element, options) {
    var defaults = {
      container: '.fte-sameheightcol',
      cells    : '.col-ab'
    };
    this.element = element;
    this.options = $.extend({}, defaults, options);
    this.init();
  }

  Sameheightcol.prototype = {
    init        : function () {
      var self = this;
      self.fte_makerow();
      $(window).on('resize.col load.col', function () {
        self.fte_makerow();
      });
    },
    fte_makerow : function () {
      var cells = $(this.element).find(this.options.cells),
          cols = $(this.element).data('col'),
          i, n, row;
      cells.css('min-height', '0'); // reset height before
      if ($(window).width() > 768) {
        for (i = 0; i < cells.length; i++) {
          if (i % cols === 0) {
            row = $(cells[i]);
            for (n = 1; n < cols; n++) {
              row = row.add(cells[i + n]);
            }
            this.fte_equalize(row);
            if (i === cells.length - 2) {
              row.addClass('last-row');
            }
          }
        }
      }
    },
    fte_equalize: function (row) {
      var heights = [], $cell, cell_height;
      $.each(row, function (i, cell) {
        $cell = $(cell);
        cell_height;
        cell_height = $cell.height();
        heights.push(cell_height);
      });
      row.css('min-height', Math.max.apply(window, heights));
    }
  };

  function Sticky(element, options) {
    var defaults = {
      marginTop: 20,
      fullHeight: false
    };
    this.element = element;
    this.options = $.extend({}, defaults, options);
    this.init();
  }

  Sticky.prototype = {
    init: function () {
      var self = this,
          element = $(self.element),
          elementTop, footerTop;
      $(window).on('resize.col load.col', function () {
        elementTop = element.parent().offset().top;
        if ( self.options.fullHeight ) {
          element.height( $(window).height() - $('#wpadminbar').height() );
        }
      });
      $(window).on('scroll.sticky load.sticky', function (e) {
        if ($(window).width() > 768) {
          var scrollTop = $(window).scrollTop(),
              scrollBottom = $(window).scrollTop() + element.height() + self.options.marginTop;
          if ($('.single-navigation-bottom').length) {
            footerTop = $('.single-navigation-bottom').offset().top;
          } else {
            footerTop = $('#colophon').offset().top;
          }
          if (scrollTop > elementTop - self.options.marginTop) {
            element.addClass('fte-fixed');
            if ( self.options.fullHeight ) {
              element.height('100%');
            }
            if (scrollBottom >= footerTop && !self.options.fullHeight) {
              element.addClass('fte-fixed-bottom');
            } else if (scrollBottom >= footerTop && self.options.fullHeight) {
                element.height(footerTop - scrollTop);
                element.css('top', 0);
                element.css('bottom', 'auto');
            } else if ($(window.document).height() - (scrollTop + $(window).height()) < $('#colophon').outerHeight() && self.options.fullHeight ) {
                element.height( $(window).height() - ($('#colophon').outerHeight() - ($(window.document).height() - (scrollTop + $(window).height()))) - $('#wpadminbar').height() );
            } else {
              element.removeClass('fte-fixed-bottom');
            }
          } else {
            element.removeClass('fte-fixed');
            if ( self.options.fullHeight ) {
              element.attr('style', '');
              element.height( $(window).height() - $('#wpadminbar').height() );
            }
          }
        }
      });
    }
  };

  $.extend($.fn, {
    expandable   : function (options) {
      return this.each(function () {
        if (!$.data(this, 'fte_' + 'expandable')) {
          $.data(this, 'fte_' + 'expandable',
              new Expandable(this, options));
        }
      });
    },
    tabs         : function (options) {
      return this.each(function () {
        if (!$.data(this, 'fte_' + 'tabs')) {
          $.data(this, 'fte_' + 'tabs',
              new Tabs(this, options));
        }
      });
    },
    sameheightcol: function (options) {
      return this.each(function () {
        if (!$.data(this, 'fte_' + 'sameheightcol')) {
          $.data(this, 'fte_' + 'sameheightcol',
              new Sameheightcol(this, options));
        } else {
          new Sameheightcol(this, options);
        }
      });
    },
    sticky       : function (options) {
      return this.each(function () {
        if (!$.data(this, 'fte_' + 'sticky')) {
          $.data(this, 'fte_' + 'sticky',
              new Sticky(this, options));
        }
      });
    }
  });

  function bindExpandables() {
    $('.fte-expandable').expandable({
      onInit : function () {
      },
      onOpen : function () {
        if ($(this.element).parent('.blog-stream').length) {

          // initialize ESPN players in the DataLab stream
          espn.affinity_video.initialize_players( $('body') );

          var posthead = $(this.element).children('.fte-expandable-title').find('.post-head'),
              icon = posthead.siblings('.fte-expandable-icon'),
              iconPosX = icon.offset().left;
          // var iconPosY = posthead.height() + 20;
          // icon.css('top', iconPosY + 'px');

          $(this.element).waypoint(function (direction) {
            icon.attr('style', '');
            $('.fte-fix-icon').removeClass('fte-fix-icon');
            if (direction === 'down') {
              icon.css('left', iconPosX + 'px');
              $(this).addClass('fte-fix-icon');
            } else {
              // icon.css('top', iconPosY + 'px');
            }
          });

          $(this.element).waypoint(function (direction) {
            if (direction === 'down') {
              icon.attr('style', '');
              $(this).removeClass('fte-fix-icon');
            } else {
              icon.css('left', iconPosX + 'px');
              $(this).addClass('fte-fix-icon');
            }
          }, {offset: function () {
            return -$(this).height()+20;
          }});
        }
      },
      onClose: function () {
        if ($(this.element).parent('.blog-stream').length) {
          // var posthead = $(this.element).children('.fte-expandable-title').find('.post-head'),
          // icon = $(this.element).children('.fte-expandable-title').find('.fte-expandable-icon');
          // var iconPosY = posthead.height() + 20;
          // icon.attr('style', '').css('top', iconPosY + 'px');
          $('.fte-fix-icon').removeClass('fte-fix-icon');
          $(this.element).waypoint('destroy');
        }
      }
    });
  }

  bindExpandables();
  $('.fte-tabs').tabs();
  $('.fte-sameheightcol').sameheightcol();
  $('.vertical #main').sameheightcol({container: '#main', cells: '.vertical-col'});
  $('.home .row-ab').sameheightcol({container: '.row-ab', cells: '.home-col'});
  $('.single').not('.full-width').find('#content').sameheightcol({container: '#content', cells: '.single-col'});
  $('.archive').not('.post-type-archive-fte_datalab').find('#content').sameheightcol({container: '#content', cells: '.single-col'});
  $('#social-widget').sticky();


  if ($('#searchform').length) {
    searchform = $('#searchform');
    searchform
        .find('button')
        .on('click',function (e) {
          e.preventDefault();
          searchform.toggleClass('closed');
          if ( !searchform.hasClass('closed') ) {
            $('#search-field').trigger('focus');
          }
        }).end()
        .find('input')
        .on('blur',function (e) {
          if ($(this).val() !== '') {
            $(this).prev('label').hide();
          } else {
            $(this).prev('label').show();
          }
        }).on('focus', function (e) {
          $(this).prev('label').hide();
        });
  }

  if ($('.blog .metadata').length) {
    $('body')
      .on('click', function (e) {
        $('div.share').hide();
      });
  }

  if ($('.post-thumbnail').length) {
    thumbnail = $('.post-thumbnail');
    thumbnail
        .on('mouseenter', function (e) {
          $(this).parents('.hentry').addClass('hovered');
        })
        .on('mouseleave', function (e) {
          $(this).parents('.hentry').removeClass('hovered');
        });
  }

  if ($('.mobile-toggle').length) {
    mobiletoggle = $('.mobile-toggle');
    mobiletoggle.on('click touchstart', function (e) {
      e.preventDefault();
      mobiletoggle.next('div').slideToggle();
    });
  }

  if ($('body').hasClass('admin-bar')) {
    $('[href^="#fn"], [href^="#ss"]').on('click', function(e) {
      e.preventDefault();
      var target = $(this).attr('href'),
          position = $(target).offset().top - 35;
      $(window).scrollTop(position);
    });
  }

  $('body').on('readMoreChange.fiveThirtyEight', function (e) {
    bindExpandables();
    FB.XFBML.parse(window.document.body);
    $(window).trigger('resize');
  });

  $(window).load(function() {
    var $sidebarAd = $('.fivethirtyeight-sidebar-ad').find('.ad-wrapper');
    if ( $sidebarAd.width() > 5 ) {
      $sidebarAd.addClass('ad-loaded');
    }
  });

  if ( isTouchDevice() ) {
    $('body').addClass('touch');
    jQuery('#content').fitVids();
  } else {
    jQuery('#content').fitVids({customSelector: 'iframe[src^="http://espn.go.com/video"]'});
  }


  // newsletter
  if ( $('.fivethirtyeight-newsletter').length ) {
    $('.fivethirtyeight-newsletter').on('click', function(e) {
      $.fancybox.open( $('#newsletter-modal'), {
        fitToView : true,
        autoSize: false,
        autoHeight: true,
        maxWidth  : '600px',
        closeBtn  : false,
        closeClick  : false,
        openEffect  : 'none',
        closeEffect : 'none',
        wrapCSS: 'newsletter',
        afterClose: function( e ) {
          var $form = $(e.element).find('form'),
              $initial_copy = $(e.element).find('#newsletter-main-copy'),
              $main_copy = $(e.element).find('.newsletter-success');

          $(e.element).find('#newsletter-signup-response').hide();
          $initial_copy.show();
          $form.trigger('reset');
          $form.show();

          if ( $main_copy.length ) {
            $main_copy.remove();
          }
        }
      });
    });
    $('.btn-newsletter').on('click', function(e) {
      e.preventDefault();
    });
    $('.close-newsletter').on('click', function(e) {
      e.preventDefault();
      $.fancybox.close();
    });

    $('#fanbridge-signup').submit(function(e, el) {
      var $form = $(e.currentTarget),
          $message = jQuery.fancybox.inner.children().find('#newsletter-signup-response'),
          $initial_copy = jQuery.fancybox.inner.children().find('#newsletter-main-copy'),
          $main_copy = jQuery.fancybox.inner.children().find('.newsletter-success');

      if ( ! $main_copy.length ) {
        $main_copy = $initial_copy.after($('<p class="newsletter-success"></p>')).parent().find('.newsletter-success');
      }

      $.ajax({
        type: 'POST',
        url: $form.attr('action') + '&response=json',
        data: $form.serialize(),
        dataType: 'jsonp',
        success: function(data) {
          if ( data.status === 'ok' ) {
            var newsModalInterval = window.setInterval(function(){
              $.fancybox.update();
            }, 20);
            $main_copy.fadeOut('fast');
            $form.slideUp('slow', function(){
              $message.hide();
              $initial_copy.hide();
              $main_copy.html('Thanks for submitting!<br>You should receive a confirmation in your inbox shortly.')
                .fadeIn('fast', function(){
                window.clearInterval(newsModalInterval);
              });
              $.fancybox.update();
            });
          } else if ( data.status === 'error' ) {
            $message.addClass('error').hide().html(data.data.fields.email).fadeIn('slow');
            $.fancybox.update();
          }
        },
        error: function( data ){
          $message.addClass('error').text('Oops! There was an issue. Try again in a moment?');
          $.fancybox.update();
        }
      });
      return false;
    });
  }

  // Change the URL.. Using replaceState so the back button doesn't seem "broken"
  // Only works in modern browsers.
  // @todo phase II: replace with a full, working implementation of the history API.
  jQuery('body').on('click.fte-history', '.fte-expandable-title a', function(e) {
    window.history.replaceState( 'fiveThirtyEight', 'blog-stream-location', e.target.getAttribute('href') );
  });

  // Featured Image (Fancybox) Widget
  if ($(window).width() > 768) {
    $('.featured-image-link').fancybox({
      maxWidth  : 800,
      // maxHeight  : 600,
      fitToView : false,
      width   : '70%',
      height    : '70%',
      autoSize  : true,
      closeClick  : false,
      openEffect  : 'none',
      closeEffect : 'none'
    });
  } else {
    $('.featured-image-link').on('click', function(e) {
      e.preventDefault();
      var lightbox = $(this).attr('href');
      window.location = $(lightbox).attr('href');
    });
  }

  // image overlays
  $('.overlay[data-href]').on('click', function (e) {
    window.location = $(this).data('href');
  });

  // LP Sharing
  $(window.document).on('click', '.lp-share', function(e) {
    if ( !$(this).parents('.pinned-first-live-update').length ) {
      $(this).find('.lp-pre-update-ui').fadeToggle();
    } else {
      return;
    }
  });

  $(window.document).on('click', '.lp-share .lp-pu-ico', function(e) {
    e.stopPropagation();
  });

  $(window.document).on( 'live_post_update', function() {
    espn.affinity_video.initialize_players( $('body') );
  });

  $('.has-bugs').each(function(i) {
    $(this).addClass('has-bugs-loaded');
  });

})(jQuery, this);
(function ($, window, undefined) {
  'use strict';

  function init() {
    $('body').on('click', '.ajax-read-more', getPosts);
    $('#filters').on('click', 'a', function(e) {
      e.preventDefault();
      var $this = jQuery(e.target),
          $readMoreLink = $('.ajax-read-more');

      // If this is the "all" filter, turn off individual filters
      if ( 'reset' === e.target.getAttribute('data-filter') ) {
        resetAllFilters();
      }

      // if this isn't the "all" filter, turn off the "all" filter
      if ( 'reset' !== e.target.getAttribute('data-filter') ) {
        makeInactive(jQuery('[data-filter=reset]').parent('li'));
      }

      // if this filter is already active, deactivate
      if ( isActive(e.target.parentNode) ) {
        makeInactive(e.target.parentNode);

        // If this made it so there are no filters active, we need to select "all"
        if ( 0 === $this.parents('ul').find('.active').length ) {
          makeActive(jQuery('[data-filter=reset]').parent('li').get(0));
        }

      } else {
        makeActive(e.target.parentNode);
      }

      displaySpinner(e.target);
      prepareReadMoreLink($readMoreLink);
      $readMoreLink.click();
    });
  }

  function isActive(el) {
    if ( el.classList ){
      return el.classList.contains('active');
    } else {
      return jQuery(el).hasClass('active');
    }
  }

  function makeActive(el) {
    if (el.classList) {
      el.classList.add('active');
    } else {
      el.className += ' ' + 'active';
    }
  }

  function makeInactive(el) {
    jQuery(el).removeClass('active');
  }


  function resetAllFilters() {
    $('#filters').find('li').removeClass('active');
  }

  function prepareReadMoreLink(linkel) {

    var filters = [];

    // Get the current filter list
    $('.active').each(function(i,el){
      var filter = el.querySelector('a').getAttribute('data-filter');
      if ( 'reset' === filter ) {
        return true;
      }
      filters.push(filter);
      return true;
    });

    // reset page to one, and add the new filters to prepare for a click event to fire.
    $(linkel).attr('data-paged', 1).attr('data-terms', filters.join(',')).attr('data-append', 'false');
  }

  /**
   * Send the data straight through to the PHP ajax handler
   * @param e
   */
  function getPosts(e) {
    e.preventDefault();

    var deferred, payload = {
      paged    : e.target.getAttribute('data-paged') || 1,
      post_type: e.target.getAttribute('data-post_type') || 'post',
      taxonomy : e.target.getAttribute('data-taxonomy') || '',
      terms    : e.target.getAttribute('data-terms') || '',
      template : e.target.getAttribute('data-template') || ''
    };

    displaySpinner(e.target);

    deferred = wp.ajax.post('read_more', { payload: payload });

    deferred.done(function (data) {
      displayPosts(data, e.target);
    });

    deferred.always(function () {
      hideSpinner(e.target);
    });

    return deferred;
  }

  function displayPosts(data, target) {
    var $target = $(target),
        $change = $target.parent();

    // Add our new data to the end or replace it, depending.
    if ( 'false' === $target.attr('data-append')) {
      $change.html(data.result);
    } else {
      $change.append(data.result);
    }

    // Fire the event while we still have a target
    $change.trigger('readMoreChange.fiveThirtyEight');

    // Now remove the target
    $target.remove();
  }

  function displaySpinner(el) {
    if (el.classList) {
      el.classList.add('spinner');
      el.classList.add('disabled');
    } else {
      el.className += ' ' + 'spinner';
      el.className += ' ' + 'disabled';
    }
  }

  function hideSpinner(el) {
    jQuery(el).removeClass('spinner disabled');

    // Also hide them from any active filters
    // @hack to do do this right, the filter itself should call getPosts, instead of trigger a click on the readmore link

    jQuery('[data-filter]').removeClass('spinner disabled');

  }

  init();

})(jQuery, this);
(function (window, $) {
  $(window.document).on('click', '.entry-content a:not(.footnote-link)', function(e) {
    var $link = $(this).attr('href');
    if ($link && $link.indexOf('mailto:') !== 0) {
      $(this).attr('target', '_blank');
    }
  });
})(window, jQuery);
(function (window, $) {
  jQuery('.widget.fivethirtyeight-embed iframe').hover(
    function() { $(this).parent().find('h3 a').addClass('underlined'); },
    function() { $(this).parent().find('h3 a').removeClass('underlined');
  });
})(window, jQuery);

(function (window, $) {
  function setVideoHeight() {
    $(this).height( $(this).width() / (16/9) );
  }

  $('.video-placeholder').each(setVideoHeight);
  $(window).on('resize', function() {
    $('.video-placeholder').each(setVideoHeight);
  });
})(window, jQuery);

(function(window,jQuery,undefined){

  function bindHandlers() {
    jQuery('#primary').on('click', '.ajax-read-more', function(e){

      // Only trigger the omniture event if the click() event was through human action
      if ( undefined !== e.originalEvent ) {
        update_for_read_more(this, 'load-more');
      }
    });

    jQuery('#filters').on('click', 'a', function (e) {
      var filters = [];

      // Get the current filter list
      jQuery('.active').each(function (i, el) {
        var filter = el.querySelector('a').getAttribute('data-filter');
        if ('reset' === filter) {
          return true;
        }
        filters.push(filter);
        return true;
      });

      update_for_read_more(this,'load-more-' + filters.join(','));
    });

    jQuery('.share-twitter').on('click', function(e){
      update_for_social(this, 'twitter');
    });

    jQuery('.share-facebook').on('click', function (e) {
      update_for_social(this, 'facebook');
    });
  }

  /**
   * Update for social clicks
   *
   * @param element
   * @param linkId
   */
  function update_for_social(element, linkId) {
    window.espn.track.omni.updateProps({
      linkTrackVars  : 'events',
      linkTrackEvents: 'event62',
      events         : 'event62',
      prop72         : linkId,
      eVar15         : window.s_omni.eVar15,
      prop15         : window.s_omni.prop15,
      section        : window.s_omni.section,
      channel        : window.s_omni.channel
    });

    window._espntrack = [
      {'linkTrackVars': 'events,channel,section,prop9,prop12,prop15,eVar15,prop72'}
    ];

    window.anTrackLink(element, 'fivethirtyeight', window.s_omni.prop4, linkId, true);
  }

  /**
   * Update on the read more clicks
   *
   * @param element
   * @param linkId
   */
  function update_for_read_more( element, linkId ) {
    window.espn.track.omni.updateProps({
      'linkTrackEvents': 'event22',
      'events'         : 'event22',
      'channel'        : window.s_omni.channel,
      'prop1'          : window.s_omni.prop1,
      'prop4'          : window.s_omni.prop4,
      'prop5'          : window.s_omni.prop5,
      'prop12'         : window.s_omni.prop12,
      'eVar11'         : window.s_omni.eVar11
    });

    window._espntrack = [
      {'linkTrackVars': 'events,channel,prop1,prop4,prop5,prop9,prop12,eVar11'}
    ];

    window.anTrackLink(element, 'fivethirtyeight', 'fivethirtyeight:blog', linkId, true);
  }

  bindHandlers();

})(window,jQuery);

(function($, window){

  'use strict';

  $('.load-more').click(function () {
    var loadMore = $(this),
      container = loadMore.attr('data-container'),
      postsFound = loadMore.attr('data-posts-found'),
      postsPerPage = window.fteData.postsPerPage,
      buttonHTML = loadMore.html(),
      pageToLoad = '',
      page = 1,
      lastDate;

    if (postsFound !== undefined) {
      loadMore.html('<span class="loading-text">Loading...</span>');
    }

    if ($(this).attr('data-page')) {
      page = parseInt($(this).attr('data-page'), 10);
      pageToLoad = $(location).attr('href').replace($(location).attr('search'), '') + 'page/' + page + '/' + $(location).attr('search');
      $(this).attr('data-page', page + 1);
    } else {
      // get last date inside container
      lastDate = $('#' + container).find('.blog-date, .feature-day-title').last().attr('data-date');
      pageToLoad = $(location).attr('href').replace(/date\/20[0-9]{2}-[0-9]{2}-[0-9]{2}\//g, '') + 'date/' + lastDate + '/';
    }

    $('<div>').load(pageToLoad + ' #' + container + ' > *',
      function () {
        var newHTML = $(this).html(),
          listItemCount;

        $(newHTML).hide().appendTo('#' + container).fadeIn(300);

        // If count of list items equals posts_found, or is not divisable by posts_per_page (which means they are spent), then don't show a button
        listItemCount = $('#' + container + ' li').length;
        if (postsFound !== undefined) {
          if ((listItemCount === postsFound) || (listItemCount % postsPerPage)) {
            loadMore.remove();
          } else {
            loadMore.html(buttonHTML);
          }
          $(window).trigger('resize.sticky');
        }
        window.Utils.lazyImages();

        // Make sure that the magic following sidebar widgets realize the page is now longer
        // makeItStick.reset();
      }
    );

    return false;
  });


  $('a.podcast').click(function() {
    if (/iP(od|ad|hone)|Android|webOS|BlackBerry/i.test(navigator.userAgent)) {
      location.href = this.getAttribute('data-mobile');
    } else {
      var popUp = window.open($(this).prop('href'), '', 'scrollbars=0,height=270,width=925');
      if (window.focus) {
        popUp.focus();
      }
    }
    return false;
  });
})(jQuery, this);
( function( $, window ) {
  //swap images at medium breakpoint
  window.Utils = {
    cache: {},
    watchResize: function(callback) {
      //throttled resize
      var resizing;
      callback.size = 0;
      function done()
      {
        var curr_size = window.innerWidth;
        clearTimeout(resizing);
        resizing = null;
        // only run on a true resize
        if (callback.size !== curr_size)
        {
          callback();
          callback.size = curr_size;
        }
      }
      window.addEventListener('resize', function() {
        if (resizing)
        {
          clearTimeout(resizing);
          resizing = null;
        }
        resizing = setTimeout(done, 50);
      });
    },
    MQ: function() {
      //get current breakpoint/layout
      var size = window.getComputedStyle(document.body, ':after').getPropertyValue('content').replace(/"/g, '');
      // Hack for Chrome 33 which has getComputedStyle bug
      // https://code.google.com/p/chromium/issues/detail?id=345653
      if (!size) {
        if ($('body').css('border-top-width') === '10px') {
          size = 'medium';
        } else {
          size = 'small';
        }
      }
      return size;
    },
    swapImg: function(img, newSrc) {
      img.src = newSrc;
    },
    lazyImages: function() {
      var size = '',
        MQ = window.Utils.MQ(),
        images = $('.lazyImg');

      images.each(function() {

        var size = this.getAttribute('data-include-size'),
          replaceSrc = this.getAttribute('data-replace-src');
        if (size && size !== MQ) {
          $(this).hide();
          return;
        }

        window.Utils.swapImg(this, replaceSrc);
      });

    },
    init: function() {
      var that = this;
      //check for temporary images to swap
      that.lazyImages();
      window.Utils.watchResize(window.Utils.lazyImages);

    }
  };

  window.Utils.init();
})(jQuery, this);